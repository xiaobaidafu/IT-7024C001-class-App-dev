using static Android.Renderscripts.ScriptGroup;

namespace DailyWellnessApp1;
// debug using ChatGPT

//Gender enumeration, facilitating subsequent branch recommendations.
public enum Gender { Male, Female, Unknown }
//Input model for cross-page parameter passing
public sealed class WellnessInput
{
    public Gender Gender { get; set; } = Gender.Unknown;
    public double SleepHours { get; set; }
    public double StressLevel { get; set; }
    public double ActivityMinutes { get; set; }
}

//The `partial` keyword indicates that another part of this class resides in MainPage.xaml, generated by the XAML compiler.
public partial class MainPage : ContentPage
{
    //_gender stores the currently selected gender, with the default being Unknown.
    private Gender _gender = Gender.Unknown;

    public MainPage()
    {
        InitializeComponent();      //nessary 
        UpdateGenderHighlight(); //change highlight session
    }
    //shadow in male
    void OnMaleTapped(object? sender, TappedEventArgs e)
    {
        _gender = Gender.Male;
        UpdateGenderHighlight();
    }
    //shadow in female
    void OnFemaleTapped(object? sender, TappedEventArgs e)
    {
        _gender = Gender.Female;
        UpdateGenderHighlight();
    }
    //updating shadow with differnet color
    void UpdateGenderHighlight()
    {
        MaleBorder.Stroke = _gender == Gender.Male ? Colors.DodgerBlue : Color.FromArgb("#cccccc");
        FemaleBorder.Stroke = _gender == Gender.Female ? Colors.HotPink : Color.FromArgb("#cccccc");
        MaleBorder.StrokeThickness = _gender == Gender.Male ? 4 : 2;
        FemaleBorder.StrokeThickness = _gender == Gender.Female ? 4 : 2;
    }

    //button for next session
    async void OnNextClicked(object? sender, EventArgs e)
    {
        if (_gender == Gender.Unknown)
        {
            await DisplayAlert("Missing", "Please select a gender.", "OK");
            return;
        }

        var input = new WellnessInput
        {
            Gender = _gender,
            SleepHours = SleepSlider.Value,
            StressLevel = StressSlider.Value,
            ActivityMinutes = ActivitySlider.Value
        };

        await Navigation.PushAsync(new ResultPage(input));
    }
}
